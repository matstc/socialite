%h1 Confirmation email settings
%p
  You can help fight spam by automatically sending an email to new users asking them to click a link to confirm their account. 

= form_for AppSettings, :url => {:controller => 'admin', :action => 'save_confirmation_email_settings'}, :method => :post do |f|
  %p{:class => 'explanation'}
    Enable confirmation emails by checking the following box:

  .field
    = f.label :confirm_email_on_registration
    = f.check_box :confirm_email_on_registration

  %p{:class => 'explanation'}
    To send the confirmation emails, this application will use Gmail by default.
    %br
    All you have to do is create a 
    %a{:href => 'http://www.gmail.com'} gmail account 
    and put in your username and password in the following boxes.

  .field
    = f.label :smtp_authentication_username, "SMTP authentication username"
    = f.text_field :smtp_authentication_username
    .example e.g. username@gmail.com
  .field
    = f.label :smtp_authentication_password, "SMTP authentication password"
    = f.password_field :smtp_authentication_password

  %p{:class => 'explanation'}
    You also need to specify the host where you are deploying Socialite (the first bit of the URL)

  .field
    = f.label :smtp_default_url_host, "Hostname"
    = f.text_field :smtp_default_url_host
    .example e.g. mysocialite.com

  .collapsible
    %a{:class => 'collapsible-title'} Advanced settings
    .collapsible-content
      .field
        = f.label :smtp_address, "SMTP server"
        = f.text_field :smtp_address
      .field
        = f.label :smtp_port, "SMTP port"
        = f.text_field :smtp_port
      .field
        = f.label :smtp_domain, "local SMTP domain"
        = f.text_field :smtp_domain
      .field
        = f.label :smtp_authentication, "SMTP Authentication"
        = f.text_field :smtp_authentication
      .field
        = f.label :smtp_tls, "Use TLS for SMTP"
        = f.check_box :smtp_tls
      .field
        = f.label :smtp_enable_starttls_auto
        = f.check_box :smtp_enable_starttls_auto

  %br
  .actions
    = f.submit 'Save settings'

%hr
%h1 Send a test email
= form_for :test_email, :url => {:controller => 'admin', :action => 'send_test_email'} do |f|
  %p 
    After saving the settings, you should send a test email to your own email address to verify that everything works correctly:
  = f.text_field :email
  = f.submit 'Send test email'
